import React, { useState, useEffect } from "react";
import axios from "axios";
import { useNavigate, Link, useLocation } from "react-router-dom";

export default function Login() {
  const [formData, setFormData] = useState({ email: "", password: "", rememberMe: false });
  const [errors, setErrors] = useState({});
  const [success, setSuccess] = useState("");
  const [animateIn, setAnimateIn] = useState(false);
  const navigate = useNavigate();
  const location = useLocation();
  
  // Animation effect when component mounts
  useEffect(() => {
    setAnimateIn(true);
  }, []);

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData({ ...formData, [name]: type === "checkbox" ? checked : value });
    setErrors({ ...errors, [name]: "" });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const newErrors = {};
    if (!formData.email) newErrors.email = "Email is required";
    if (!formData.password) newErrors.password = "Password is required";
    if (Object.keys(newErrors).length) return setErrors(newErrors);

    try {
      const res = await axios.post("http://localhost:5000/api/auth/login", {
        email: formData.email,
        password: formData.password,
      });
      setSuccess("Login successful!");
      localStorage.setItem("token", res.data.token);
      formData.rememberMe
        ? localStorage.setItem("rememberedEmail", formData.email)
        : localStorage.removeItem("rememberedEmail");
      setTimeout(() => navigate("/dashboard"), 500);
    } catch (err) {
      setErrors({ api: err.response?.data?.message || "Login failed" });
    }
  };

  return (
    <div className="min-h-screen flex items-center justify-center overflow-hidden"
         style={{
           background: "radial-gradient(1200px 800px at 20% 0%, #2b212f 0%, #131225 60%, #0c0b18 100%)"
         }}>

      {/* Animation styles */}
      <style>{`
        @keyframes fadeIn {
          from { opacity: 0; transform: translateY(20px); }
          to { opacity: 1; transform: translateY(0); }
        }
        
        @keyframes floatingShape {
          0% { transform: translateY(0) rotate(0deg); }
          50% { transform: translateY(-15px) rotate(3deg); }
          100% { transform: translateY(0) rotate(0deg); }
        }
        
        @keyframes glowPulse {
          0% { filter: drop-shadow(0 0 3px rgba(122, 127, 251, 0.6)); }
          50% { filter: drop-shadow(0 0 8px rgba(122, 127, 251, 0.8)); }
          100% { filter: drop-shadow(0 0 3px rgba(122, 127, 251, 0.6)); }
        }
        
        @keyframes rotateGlow {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }
        
        .login-container {
          animation: fadeIn 0.6s ease-out forwards;
          opacity: ${animateIn ? 1 : 0};
        }
        
        .form-container {
          animation: fadeIn 0.8s ease-out forwards;
          animation-delay: 0.3s;
          opacity: ${animateIn ? 1 : 0};
        }
        
        .design-element {
          background: linear-gradient(135deg, #7a7ffb 0%, #676cff 100%);
          animation: floatingShape 6s ease-in-out infinite;
        }
        
        .glow-circle {
          background: radial-gradient(circle, rgba(122, 127, 251, 0.3) 0%, rgba(122, 127, 251, 0) 70%);
          animation: glowPulse 4s ease-in-out infinite;
        }
        
        .rotating-ring {
          border: 2px solid rgba(122, 127, 251, 0.3);
          animation: rotateGlow 12s linear infinite;
        }
        
        .page-transition {
          transition: transform 0.6s cubic-bezier(0.22, 1, 0.36, 1), opacity 0.6s cubic-bezier(0.22, 1, 0.36, 1);
        }
      `}</style>

      <div className="flex w-full max-w-6xl mx-auto rounded-xl shadow-2xl overflow-hidden login-container">
        {/* Left Section - Form */}
        <div className="w-1/2 bg-white bg-opacity-5 backdrop-blur-sm p-10 flex flex-col justify-start relative z-10">
          <h1 className="text-4xl font-bold mb-2 text-white">Login</h1>
          <p className="text-gray-300 mb-6">Login to access your Mirror account</p>

          {errors.api && <p className="text-red-400 mb-3 bg-red-900 bg-opacity-20 p-2 rounded">{errors.api}</p>}
          {success && <p className="text-green-400 mb-3 bg-green-900 bg-opacity-20 p-2 rounded">{success}</p>}

          <form onSubmit={handleSubmit} className="space-y-4 max-w-lg form-container">
            {/* Email Field */}
            <div>
              <label className="block text-sm font-medium mb-1 text-gray-300">Email</label>
              <input
                type="email"
                name="email"
                placeholder="john.doe@gmail.com"
                className="w-full bg-white bg-opacity-5 border border-white border-opacity-10 px-4 py-3 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-[#7a7ffb] focus:border-transparent transition-all"
                onChange={handleChange}
                value={formData.email}
              />
              {errors.email && <p className="text-red-400 text-sm mt-1">{errors.email}</p>}
            </div>

            {/* Password Field */}
            <div>
              <label className="block text-sm font-medium mb-1 text-gray-300">Password</label>
              <input
                type="password"
                name="password"
                placeholder="••••••••"
                className="w-full bg-white bg-opacity-5 border border-white border-opacity-10 px-4 py-3 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-[#7a7ffb] focus:border-transparent transition-all"
                onChange={handleChange}
                value={formData.password}
              />
              {errors.password && <p className="text-red-400 text-sm mt-1">{errors.password}</p>}
            </div>

            {/* Remember Me */}
            <div className="flex items-center">
              <input
                type="checkbox"
                name="rememberMe"
                checked={formData.rememberMe}
                onChange={handleChange}
                className="mr-2 accent-[#7a7ffb]"
              />
              <label className="text-sm text-gray-300">Remember me</label>
            </div>

            {/* Login Button */}
            <button
              type="submit"
              className="w-full bg-gradient-to-r from-[#7a7ffb] to-[#676cff] text-white py-3 rounded-md hover:from-[#676cff] hover:to-[#7a7ffb] transition-all duration-300 shadow-lg hover:shadow-[#7a7ffb]/20"
            >
              Login
            </button>
          </form>

          {/* Sign Up Link */}
          <p className="mt-6 text-sm text-gray-300">
            Don't have an account?{" "}
            <Link to="/signup" className="text-[#7a7ffb] hover:text-white transition-colors">
              Sign up
            </Link>
          </p>
        </div>

        {/* Right Section - Design Elements */}
        <div className="w-1/2 relative overflow-hidden bg-gradient-to-br from-[#131225] to-[#0c0b18]">
          {/* Abstract shapes */}
          <div className="absolute top-10 right-20 w-32 h-32 design-element rounded-full opacity-70"></div>
          <div className="absolute bottom-20 right-40 w-16 h-16 design-element rounded-full opacity-50"></div>
          <div className="absolute top-1/3 left-10 w-24 h-24 design-element rounded-full opacity-30"></div>
          
          {/* Glow effects */}
          <div className="absolute top-1/4 left-1/4 w-64 h-64 glow-circle"></div>
          <div className="absolute bottom-1/4 right-1/4 w-80 h-80 glow-circle"></div>
          
          {/* Rotating rings */}
          <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 rotating-ring rounded-full"></div>
          <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-80 h-80 rotating-ring rounded-full" style={{ animationDirection: 'reverse' }}></div>
          <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-64 h-64 rotating-ring rounded-full" style={{ animationDelay: '-4s' }}></div>
          
          {/* Center message */}
          <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-center z-10">
            <h2 className="text-3xl font-bold text-white mb-3">Reflect Daily</h2>
            <p className="text-gray-300 max-w-xs">
              Your personal space for reflection, growth, and mindfulness.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}
